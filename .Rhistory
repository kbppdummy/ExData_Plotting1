source('~/functions.R')
substr("fBodyAccJerk.std.Z",2)
source('~/functions.R')
makeAppropriateNames(names(merged))
source('~/functions.R')
makeAppropriateNames(names(merged))
source('~/functions.R')
source('~/functions.R')
source('~/functions.R')
?mutate
source('~/run_analysis.R')
label <- select(merged, activity)
label <- convertY(label)
merged <- mutate(merged, newY = label)
as.vector(label)
label <- as.vector(label)
merged <- mutate(merged, newY = label)
source('~/functions.R')
source('~/functions.R')
source('~/functions.R')
source('~/functions.R')
source('~/functions.R')
source('~/functions.R')
source('~/functions.R')
head(select(merged, activity), n=30)
sample_n(select(merged,activity), 5)
sample_n(select(merged,activity), 5)
head(select(merged, activity))
?head
tail(select(merged, activity))
tail(select(merged, activity), n=30)
source('~/functions.R')
merged2 <- changeActivityNames(merged = )
merged2 <- changeActivityNames(merged)
tail(select(merged2, activity), n=30)
merged2[10299,"activity"] = "walking upstairs"
tail(select(merged2, activity), n=30)
source('~/functions.R')
source('~/functions.R')
merged2 <- changeActivityNames(merged)
source('~/functions.R')
source('~/functions.R')
tail(select(merged2, activity), n=30)
merged2 <- changeActivityNames(merged)
tail(select(merged2, activity), n=30)
source('~/functions.R')
merged2 <- changeActivityNames(merged)
merged[1,"activity"]
tail(select(merged2, activity), n=30)
head(select(merged2, activity), n=30)
source('~/functions.R')
merged2 <- changeActivityNames(merged)
class(merged[,"activity"])
class(merged[1,"activity"])
source('~/functions.R')
source('~/functions.R')
merged2 <- changeActivityNames(merged)
source('~/functions.R')
source('~/functions.R')
merged2 <- changeActivityNames(merged)
head(select(merged2, activity), n=30)
tail(select(merged2, activity), n=30)
source('~/run_analysis.R')
source('~/run_analysis.R')
source('~/run_analysis.R')
source('~/run_analysis.R')
source('~/run_analysis.R')
merged <- run_analysis()
source('~/run_analysis.R')
names(merged)
?group_by
group_by(merged, activity)
class(merged)
m1 <- group_by(merged, activity)
summarize(m1, "Average of Mean" = time.BodyAcc.mean.X)
summarize(m1, time.BodyAcc.mean.X)
summarize(m1, mean(time.BodyAcc.mean.X))
summarize(m1, "Average of Mean" = mean(time.BodyAcc.mean.X))
m2 <- group_by(merged, subject.id)
summarize(m2, "Average of Mean" = mean(time.BodyAcc.mean.X))
m3 <- group_by(merged, activity, subject.id)
summarize(m3, "Average of Mean" = mean(time.BodyAcc.mean.X))
names(m3)
summarize(m3, c("Average1" = mean(time.BodyAcc.mean.X), "Average2" = mean(time.BodyAcc.mean.Y)))
source('~/functions.R')
source('~/functions.R')
source('~/functions.R')
variables <- names(merged)
variables <- variables[2:length(merged)-1]
variables
variables <- names(merged)
variables
variables <- variables[2:length(merged)-1]
variables
variables <- variables[2:length(merged)]
variables
source('~/functions.R')
source('~/functions.R')
variables <- names(merged)
variables <- variables[2:(length(variables)-1)]
variables
source('~/functions.R')
source('~/functions.R')
source('~/functions.R')
source('~/functions.R')
source('~/functions.R')
source('~/functions.R')
summarize(m3, "Average of Mean" = mean(time.BodyAcc.mean.X))
source('~/functions.R')
c(c(1,2),3,c(4))
?group_by
?summarize
source('~/functions.R')
t1 <- summarize(m3, "Average of Mean" = mean(time.BodyAcc.mean.X))
t2 <- summarize(m3, "Average of Mean" = mean(time.BodyAcc.mean.X))
cbind(t1,t2)
cbind(t1,t2[,3])
cbind(t1,select(t2,3))
cbind(t1,select(t2,3,-activity))
select(t2,activity)
select(t2,3)
t1
head(t1, n=20)
t1 <- summarize(m1, "Average of Mean" = mean(time.BodyAcc.mean.X))
t2 <- summarize(m3, "Average of Mean" = mean(time.BodyAcc.mean.X))
t1
t2
m1
m2
class(m2)
class(merged)
m <- as_tibble(merged)
m
source('~/functions.R')
source('~/functions.R')
source('~/functions.R')
source('~/functions.R')
source('~/functions.R')
source('~/functions.R')
source('~/functions.R')
m <- group_by(m, activity, subject.id)
summarize(m, mean(time.BodyAccJerk.mean.Y))
select(filter(m,subject.id==1 & activity=='laying'),
'time.BodyAccJerk.mean.Y')
mean(select(filter(m,subject.id==1 & activity=='laying'), 'time.BodyAccJerk.mean.Y')
)
temp <- select(filter(m,subject.id==1 & activity=='laying'), 'time.BodyAccJerk.mean.Y')
summarize(m, mean(time.BodyAccJerk.mean.Y))
mean(temp[,'time.BodyAccJerk.mean.Y'])
temp[,'time.BodyAccJerk.mean.Y']
summarize(temp, mean(time.BodyAccJerk.mean.Y))
source('~/functions.R')
source('~/functions.R')
source('~/functions.R')
source('~/functions.R')
source('~/functions.R')
join_all(t1,t2)
library(plyr)
install.packages("plyr")
?merge
t1
t2
t2 <- summarize(m3, "Average of Mean" = mean(time.BodyAcc.mean.X))
t2
t2 <- summarize(m3, "Average of Mean Y" = mean(time.BodyAcc.mean.Y))
t1 <- summarize(m3, "Average of Mean X" = mean(time.BodyAcc.mean.X))
t1
t2
merge(t1,t2)
t3 <- summarize(m3, "Average of Mean Z" = mean(time.BodyAcc.mean.Z))
t <- merge(t1,t2)
merge(t, t3)
source('~/functions.R')
t3 <- summarize(m3, "Average of Mean Z" = mean("time.BodyAcc.mean.Z"))
warnings()
?mean
?summarize
?quo
var <- "time.BodyAcc.mean.Z"
t3 <- summarize(m3, "Average of Mean Z" = mean(!!var))
t3 <- summarize(m3, "Average of Mean Z" = mean(var))
t3 <- summarize(m3, "Average of Mean Z" = mean(!!var))
warnings
warnings)
warnings()
?summarize
?summarize_all
summarize_all(m,mean)
source('~/functions.R')
source('~/functions.R')
source('~/run_analysis.R')
source('~/run_analysis.R')
source('~/run_analysis.R')
source('~/run_analysis.R')
source('~/run_analysis.R')
source('~/run_analysis.R')
run_analysis()
source('~/run_analysis.R')
run_analysis()
source('~/run_analysis.R')
run_analysis()
source('~/run_analysis.R')
source('~/run_analysis.R')
run_analysis()
run_analysis()
merged <- read.csv("merged.csv")
names(merged.csv)
names(merged)
write.csv(names(merged), "names.csv")
merged[,"X"]
X_train <- read.table("./data/train/X_train.TXT")
Y_train <- read.table("./data/train/y_train.TXT", col.names = c("activity"))
subject_train <- read.table("./data/train/subject_train.TXT", col.names = c("subject.id"))
names(X_train)
X_test <- read.table("./data/test/X_test.TXT")
Y_test <- read.table("./data/test/y_test.TXT", col.names = c("activity"))
subject_test <- read.table("./data/test/subject_test.TXT", col.names = c("subject.id"))
temp <- getMeanAndStd(X_test, X_train)  #will return only those with mean and std computations from the training and testing data
X_test <- temp[1]
X_train <- temp[2]
source('~/merge.R')
temp <- getMeanAndStd(X_test, X_train)  #will return only those with mean and std computations from the training and testing data
X_test <- temp[1]
X_train <- temp[2]
temp <- getMeanAndStd(X_test, X_train)  #will return only those with mean and std computations from the training and testing data
X_test <- temp[1]
X_train <- temp[2]
source('~/functions.R')
temp <- getMeanAndStd(X_test, X_train)  #will return only those with mean and std computations from the training and testing data
X_test <- temp[1]
X_train <- temp[2]
names(X_train)
names(temp)
source('~/functions.R')
source('~/merge.R')
source('~/run_analysis.R')
temp <- getMeanAndStd(X_test, X_train)  #will return only those with mean and std computations from the training and testing data
features <- read.table("./data/features.TXT", stringsAsFactors = FALSE)
features
features <- features[,2
]
features
features <- cleanVariableNames(features)
features
names(X_test) <- features
class(features)
nchar(features)
source('~/functions.R')
features <- read.table("./data/features.TXT")
features <- features[,2] #removes the feature number
features <- cleanVariableNames(features) #makes the variable names more readable
names(X_test) <- features #renames the columns with the read features
features[1]
class(names(X_test))
names(X_test))
length(features)
length(names(X_test))
head(X_test)
X_train <- read.table("./data/train/X_train.TXT")
Y_train <- read.table("./data/train/y_train.TXT", col.names = c("activity"))
subject_train <- read.table("./data/train/subject_train.TXT", col.names = c("subject.id"))
X_test <- read.table("./data/test/X_test.TXT")
Y_test <- read.table("./data/test/y_test.TXT", col.names = c("activity"))
subject_test <- read.table("./data/test/subject_test.TXT", col.names = c("subject.id"))
features <- read.table("./data/features.TXT")
features <- features[,2] #removes the feature number
features <- cleanVariableNames(features) #makes the variable names more readable
source('~/functions.R')
features <- read.table("./data/features.TXT")
features <- features[,2] #removes the feature number
features <- cleanVariableNames(features) #makes the variable names more readable
temp <- names(X_test)
names(X_test) <- features
source('~/run_analysis.R')
run_analysis()
?write.csv
source('~/run_analysis.R')
source('~/run_analysis.R')
run_analysis()
merged <- read.csv("merged.csv")
names(merged)
source('~/run_analysis.R')
write.csv(names(merged), "names.csv", row.names = FALSE)
getwd()
write.csv(names(merged), "names.csv", row.names = FALSE)
names(merged)
c(names(merged))
write.csv(c(names(merged)), "names.csv", row.names = FALSE)
source('~/run_analysis.R')
write.csv(c(names(merged)), "names.csv", row.names = FALSE, col.names = FALSE)
write.csv(names(merged), "names.csv", row.names = FALSE, col.names = FALSE)
write.csv(names(merged), "names.csv", row.names = FALSE, col.names = FALSE)
run_analysis()
summaries <- read.csv("summaries.csv")
head(summaries)
source('~/run_analysis.R')
source('~/run_analysis.R')
source('~/run_analysis.R')
source('~/run_analysis.R')
run_analysis()
summaries <- read.csv("summaries.csv")
head(summaries)
source('~/functions.R')
source('~/functions.R')
source('~/functions.R')
run_analysis()
summaries <- read.csv("summaries.csv")
names(summaries)
library(datasets)
with(faithful, plot(eruptions, waiting))
title(main="Data")
library(swirl)
swirl()
install_from_swirl("Exploratory Data Analysis")
install_from_swirl("Exploratory Data Analysis")
install_from_swirl("Exploratory Data Analysis")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col="blue")
abline(h=12)
hist(ppm, col="green")
rug(ppm)
hist(low)
low
high
hist(ppm, col="green")
rug(ppm)
hist(ppm, col="green",breaks=100)
rug(ppm)
hist(ppm, col="green")
abline(v=12, lwd=2)
abline(v=median(ppm), lwd=4, col="magenta")
abline(v=median(ppm), col="magenta", lwd=4)
names(pollution)
table(pollution$region)
reg <- table(pollution$region)
reg
barplot(reg, col="wheat", main="Number of Countries in Each Region")
barplot(reg, col="wheat", main="Number of Counties in Each Region")
boxplot(pm25~region,data="pollution", col="red")
boxplot(pm25~region,data=pollution, col="red")
par(mfrow=c(2,1), mar=c(4,4,2,1))
east <- subset(pollution,pollution$region=="east")
east <- subset(pollution,region=="east")
head(east)
hist(east,col="green")
hist(east$pm25,col="green")
subset(pollution,region=="west") %>% hist(col="green")
hist(subset(pollution,region=="east")$pm25,col = "green")
hist(subset(pollution,region=="west")$pm25,col = "green")
with(pollution, plot(latitude, pm25))
abline(h=12, lwd=2, lty=2)
plot(pollution$latitude, ppm, col=pollution$region)
abline(h=12, lwd=2, lty=2)
par(mfrow=c(1,2), mar=c(5,4,2,1))
west <- subset(pollution, region=="west")
plot(west$latitude, west$pm25, main="West")
plot(west$latitude, west$pm25, main="East")
plot(east$latitude, east$pm25, main="East")
?Devices
with(faithful,plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful,plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful,plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.copy(png,file="geyserplot.png")
dev.off()
head(cars)
with(cars,plot(speed,dist))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, data=state,layout=c(4,1))
xyplot(Life.Exp ~ Income | region, data=state,layout=c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy,data=mpg)
head(airquality)
range(airquality$Ozone, na.rm=TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone ~ Month, airquality)
boxplot(Ozone ~ Month, airquality, xlab="Month", ylab="Ozone (ppb)", col.axis="blue", col.lab = "red")
boxplot(Ozone ~ Month, airquality, xlab="Month", ylab="Ozone (ppb)", col.axis="blue", col.lab = "red", main="Ozone and Wind in New York City")
title(main="Ozone and Wind in New York City")
with(airquality,plot(Wind, Ozone))
title(main="Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type="n")
title(main="Wind and Ozone in NYC")
may <- subset(airquality, Month==5)
points(may, pch=3, col="blue")
points(may$Wind, may$Ozone, pch=17, col="blue")
points(may$Wind, may$Ozone, color="blue", pch=17)
points(may$Wind, may$Ozone, col="blue", pch=17)
notmay <- subset(airquality, Month!=5)
points(notmay$Wind, notmay$Ozone, col="blue", pch=3)
points(notmay$Wind, notmay$Ozone, col="blue", pch=8)
points(notmay$Wind, notmay$Ozone, col="red", pch=8)
legend("topright", pch=c(17,8), col=c("blue", "red"), legend = c("May", "Other Months"))
abline(v=median(airquality$Wind), lty=2)
abline(v=median(airquality$Wind), lty=2, lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind)
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main="Ozone and Solar Radiation")
par(mfrow=c(1,3), mar=c(4,4,2,1), oma=c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main="Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main="Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main="Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer=TRUE)
?lines
pwd()
getwd()
setwd("~/ExData_Plotting1")
data <- read.table("../exdata_data_household_power_consumption/household_power_consumption.txt",header=TRUE,skip = 21998, nrows=10)
head(data)
headers <- read.table("../exdata_data_household_power_consumption/household_power_consumption.txt",nrows=1)
headers
headers <- read.table("../exdata_data_household_power_consumption/household_power_consumption.txt",nrows=1,sep=";")
headers
data <- read.table("../exdata_data_household_power_consumption/household_power_consumption.txt",header=TRUE,skip = 21997, nrows=10)
head(data)
data <- read.table("../exdata_data_household_power_consumption/household_power_consumption.txt",header=TRUE,skip = 21995, nrows=10)
head(data)
data <- read.table("../exdata_data_household_power_consumption/household_power_consumption.txt",header=TRUE,skip = 21996, nrows=10)
head(data)
data <- read.table("../exdata_data_household_power_consumption/household_power_consumption.txt",header=TRUE,skip = 21996, nrows=100)
tail(data)
data <- read.table("../exdata_data_household_power_consumption/household_power_consumption.txt",header=TRUE,skip = 21996, nrows=1000)
tail(data)
data <- read.table("../exdata_data_household_power_consumption/household_power_consumption.txt",header=TRUE,skip = 21996, nrows=10000)
tail(data)
31*24*60
data <- read.table("../exdata_data_household_power_consumption/household_power_consumption.txt",skip = 21996, nrows=10000)
head(data)
44640+21996
data <- read.table("../exdata_data_household_power_consumption/household_power_consumption.txt",skip = 66636, nrows=10000)
head(data)
data <- read.table("../exdata_data_household_power_consumption/household_power_consumption.txt",skip = 66635, nrows=10000)
head(data)
data <- read.table("../exdata_data_household_power_consumption/household_power_consumption.txt",skip = 66637, nrows=10000)
head(data)
28*24*60
data <- read.table("../exdata_data_household_power_consumption/household_power_consumption.txt",skip = 66637, nrows=40320)
tail(data)
data <- read.table("../exdata_data_household_power_consumption/household_power_consumption.txt",skip = 66637, nrows=40321)
tail(data)
data <- read.table("../exdata_data_household_power_consumption/household_power_consumption.txt",skip = 66637, nrows=40320)
data <- read.table("../exdata_data_household_power_consumption/household_power_consumption.txt",skip = 66637, nrows=40320, na.strings = "?")
head(data)
head(data,n=20)
dim(data)
names(data) <- headers
headers
names(data)
data <- read.table(
"../exdata_data_household_power_consumption/household_power_consumption.txt",
skip = 66637,
nrows=40320,
na.strings = "?",
sep=";");
names(data)
names(data) <- headers
names(data)
headers
names(data) <- headers[,1]
names(data)
names(data) <- headers[1,]
names(data)
names(data) <- headers[1]
names(data)
headers
as.vector(headers)
names(data) <- as.vector(headers)
names(data)
headers <- read.table(
"../exdata_data_household_power_consumption/household_power_consumption.txt",
nrows=1,
sep=";");
headers
source('~/ExData_Plotting1/script.R')
data <- getData()
names(data)
source('~/ExData_Plotting1/script.R')
data <- getData()
names(data)
class(headers)
c(t(headers))
names(data) <- c(t(headers))
names(data)
head(data)
source('~/ExData_Plotting1/script.R')
data <- getData()
head(data)
?t
